./chroma_double -i example.ini.xml -o example.out.xml

# The command lines -i and -o flags are used by chroma to select where to read the input XML from and write the output XML respectively. In the gauge generation programs the -l provides a location to log the progress of the MD. If you do not specify them chroma will try to read the input XML from a file called DATA and write the output XML to a file called XMLDAT and any log file to XMLLOG in the working directory (these are left over from the old SZIN days. On operating systems that support the getcwd system call to get the path to the current working directory (eg under most UNIX operating systems) this all works fine. On the QCDOC the getcwd system call is not publicly exposed so the program will always look in the root directory from the mount point. These flags can be used to read input from and or place output to different working directories, and they are generally convenient if you run a long chain of tools and don't want to rename everything to DATA and XMLDAT between running the tools

# In this exercise you have not been working on a parallel machine. Working on a parallel machine, you can add an extra option to chroma called -geom. This allows you to specify the geometry of your processors. We assume a logical 4D processor array, although underneath everything it may actually be a different topology (eg switched). On the QCDOC you of course need to remap the machine axes suitably prior to running. For example on a 128 node switched machine, you may choos to map the processor grid as a 1x2x8x8 grid. You would then use -geom 1 2 8 8. Alternatively you may have a 256 node QCDOC, which you have remapped (using qpartition_remap) as a 4x4x4x4 grid. You would then specify that on the command line as -geom 4 4 4 4